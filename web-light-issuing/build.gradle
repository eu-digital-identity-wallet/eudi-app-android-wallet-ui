import com.github.jk1.license.filter.ExcludeTransitiveDependenciesFilter
import com.github.jk1.license.filter.LicenseBundleNormalizer
import com.github.jk1.license.filter.ReduceDuplicateLicensesFilter
import com.github.jk1.license.render.InventoryMarkdownReportRenderer

plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android
    alias libs.plugins.dokka
    alias libs.plugins.dependency.license.report
}

def meta = [
        namespace  : 'eu.europa.ec.eudi.web.lightIssuing',
        groupId    : 'eu.europa.ec.eudi',
        artifactId : 'eudi-lib-android-web-light-issuing-eudi-kt',
        version    : '0.1.0-SNAPSHOT',
        description: 'EUDI ISO 18013-5 Android Holder library for issuing documents over the web',
]

android {
    namespace meta.namespace
    version meta.version
    group meta.groupId
    compileSdk 33

    defaultConfig {
        minSdk 26

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testApplicationId "eu.europa.ec.eudi.web.lightIssuing.test"
        testHandleProfiling true
        testFunctionalTest true

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.toVersion(libs.versions.java.get())
        targetCompatibility JavaVersion.toVersion(libs.versions.java.get())
    }
    kotlinOptions {
        jvmTarget = libs.versions.java.get()
    }

    sourceSets {

        test {
            resources {
                srcDirs 'src\\test\\resources'
            }
        }
    }
}

dependencies {

    implementation libs.appcompat

    implementation libs.bouncy.castle.prov
    implementation libs.bouncy.castle.pkix

    testImplementation libs.junit
    testImplementation libs.mockk

    androidTestImplementation libs.android.junit
    androidTestImplementation libs.espresso.core
}

dokkaGfm {
    outputDirectory.set(file("$projectDir/docs"))
}

licenseReport {
    unionParentPomLicenses = false
    filters = [new LicenseBundleNormalizer(), new ReduceDuplicateLicensesFilter(), new ExcludeTransitiveDependenciesFilter()]
    configurations = ['releaseRuntimeClasspath']
    excludeBoms = true
    excludeOwnGroup = true
    renderers = [new InventoryMarkdownReportRenderer("licenses.md", "EUDI Web Light Issuing library")]
}

tasks.register('copyLicenseReport', Copy) {
    from "$buildDir/reports/dependency-license/licenses.md"
    into "$projectDir"
    dependsOn 'generateLicenseReport'
}
generateLicenseReport.finalizedBy("copyLicenseReport")
build.finalizedBy("generateLicenseReport", "dokkaGfm")

tasks.register('dokkaHtmlJar', Jar.class) {
    dependsOn(dokkaHtml)
    from(dokkaHtml)
    archiveClassifier.set("html-docs")
}

tasks.register('dokkaJavadocJar', Jar.class) {
    dependsOn(dokkaJavadoc)
    from(dokkaJavadoc)
    archiveClassifier.set("javadoc")
}